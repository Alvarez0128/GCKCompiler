package AnalisisSintactico;

import java_cup.runtime.Symbol;

parser code
{:
    private Symbol s;
    
    public void syntax_error(Symbol s){
        this.s = s;
    }

    public Symbol getS(){
        return this.s;
}
:};

terminal tipoDato,array,object,rect2,vector2,timeSpan,resource,aabb,file,funcionInterna,const,importAll,mover,color,extends,new,return,start,
         class,void,print,func,for,while,if,elif,else,true,false,break,in,range,igual,masIgual,menosIgual,modIgual,porIgual,divIgual,notIgual,
         igualIgual,mayorIgual,menorIgual,menor,mayor,mas,mul,div,resta,mod,llave_A,llave_C,corch_A,corch_C,paren_A,paren_C,coma,and,or,not,opAccMiembros,
         cadChar,cadCaracteres,identificador,numEntero,numFloat
         ;

non terminal INICIO, SENTENCIA, DECLARACION, DECLARACION_FOR, IF, ELIF,
    ELSE, WHILE, FOR, SENTENCIA_BOOLEANA, SENTENCIA_FOR;

start with INICIO;

INICIO ::= 
   importAll? 
   class identificador llave_A SENTENCIA llave_C
;

SENTENCIA ::= 
   SENTENCIA DECLARACION |
   DECLARACION |
   SENTENCIA IF | 
   IF |
   SENTENCIA ELIF |
   ELIF |
   SENTENCIA ELSE |
   ELSE |
   SENTENCIA WHILE
   WHILE |
   SENTENCIA FOR |
   FOR
;

DECLARACION ::= 
   const? tipoDato identificador | 
   const? tipoDato identificador igual (numEntero|numFloat|cadCaracteres|cadChar|identificador|true|false) |
   const? array corch_A tipoDato corch_C identificador igual corch_A (numEntero|numFloat|cadCaracteres|cadChar|identificador|true|false)? corch_C
   const? object identificador
   const? object identificador igual paren_A (numEntero|numFloat|cadCaracteres|cadChar|identificador|true|false) paren_C
   const? rect2 identificador igual new rect2 paren_A identificador coma identificador paren_C
   const? vector2 identificador igual new vector2 paren_A numEntero coma numEntero paren_C
   const? timeSpan identificador igual new timeSpan paren_A numEntero paren_C
   const? resource identificador igual llave_A cadCaracteres llave_C
   const? aabb identificador igual new aabb paren_A identificador paren_C
   const? color identificador igual paren_A numEntero coma numEntero coma numEntero paren_C
;

IF ::= 
   if paren_A SENTENCIA_BOOLEANA paren_C llave_A SENTENCIA llave_C |
   if SENTENCIA_BOOLEANA llave_A SENTENCIA llave_C
;
SENTENCIA_BOOLEANA ::= 
   Op_booleano | 
   Identificador Op_relacional Op_booleano |
   Identificador Op_relacional Numero |
   Identificador Op_relacional Identificador |
   Identificador Op_relacional Comillas Comillas |
   Identificador Op_relacional Comillas Identificador Comillas
;
IF_ELSE ::= If Parentesis_a SENTENCIA_BOOLEANA Parentesis_c Llave_a SENTENCIA Llave_c Else Llave_a SENTENCIA Llave_c
;
WHILE ::= While Parentesis_a SENTENCIA_BOOLEANA Parentesis_c Llave_a SENTENCIA Llave_c
;
DO_WHILE ::= Do Llave_a SENTENCIA Llave_c While Parentesis_a SENTENCIA_BOOLEANA Parentesis_c P_coma
;
FOR ::= For Parentesis_a SENTENCIA_FOR Parentesis_c Llave_a SENTENCIA Llave_c
;
SENTENCIA_FOR ::=
   T_dato Identificador Igual Numero P_coma SENTENCIA_BOOLEANA P_coma DECLARACION_FOR |
   Identificador Igual Numero P_coma SENTENCIA_BOOLEANA P_coma DECLARACION_FOR
;
DECLARACION_FOR ::= 
   Identificador Op_atribucion Numero |
   Identificador Op_incremento | 
   Op_incremento Identificador
;
